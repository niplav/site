/*
Generated by Squiggle AI. Workflow ID: a1c362d8-dd87-4bed-8e91-dfa6b85810db
*/
//import "hub:ozziegooen/helpers" as h

// Base inputs and assumptions
inputs = {
  @name("Shoelace users")
  @doc(
    "Number of people using shoes with shoelaces ~daily."
  )
  globalPopulation = truncate(5B to 6B, 0B, 8B)

  @name("Shoes per Person")
  @doc("Average number of pairs of shoes owned per person globally")
  shoesPerPerson = mx([2 to 4, 1 to 8], [0.8, 0.2])

  @name("Daily Shoe Tying Time (seconds)")
  @doc(
    "Time spent tying shoes per day. Varies significantly by age, dexterity, and whether shoes are double-knotted. Children and elderly may take 2-3x longer."
  )
  dailyTyingTime = mx([20 to 40, 10 to 60], [0.8, 0.2])

  @name("Learning Time (hours)")
  @doc("Time spent learning to tie shoes in childhood")
  learningTime = 2 to 8

  @name("Manufacturing Cost Difference ($)")
  @doc("Additional cost to manufacture velcro vs laces per pair")
  velcroCostDiff = 0.5 to 2

  @name("Replacement Rate Ratio")
  @doc("How much more frequently velcro needs replacement vs laces")
  velcroReplacementRatio = 1.2 to 2.5

  @name("Aesthetic Value Loss ($)")
  @doc("Perceived value loss per year from using velcro instead of laces")
  aestheticLoss = normal({ p5: 0, p95: 20 })

  {
    globalPopulation,
    shoesPerPerson,
    dailyTyingTime,
    learningTime,
    velcroCostDiff,
    velcroReplacementRatio,
    aestheticLoss,
  }
}

calculations = {
  @name("Annual Time Cost per Person (hours)")
  annualTimePerPerson = inputs.dailyTyingTime * 365 /
    (60 * 60)

  @name("Total Learning Time Cost (hours)")
  totalLearningTime = inputs.globalPopulation * inputs.learningTime

  @name("Annual Global Manufacturing Cost ($)")
  annualManufacturingCost = inputs.globalPopulation * inputs.shoesPerPerson *
    inputs.velcroCostDiff /
    inputs.velcroReplacementRatio

  @name("Annual Global Aesthetic Cost ($)")
  annualAestheticCost = inputs.globalPopulation * inputs.aestheticLoss

  @name("Annual Global Time Value ($)")
  @doc(
    "Using varied global wage estimate accounting for income differences across regions"
  )
  averageWage = mx([5 to 15, 2 to 25], [0.7, 0.3])
  annualTimeValue = inputs.globalPopulation * annualTimePerPerson * averageWage

  netBenefit = annualTimeValue - (annualManufacturingCost + annualAestheticCost)

  {
    annualTimePerPerson,
    totalLearningTime,
    annualManufacturingCost,
    annualAestheticCost,
    annualTimeValue,
    netBenefit,
  }
}

@name("Results Table")
results = [
  {
    metric: "Annual Time Saved per Person",
    value: calculations.annualTimePerPerson,
    unit: "hours",
  },
  { metric: "Net Annual Benefit", value: calculations.netBenefit, unit: "$" },
]
//-> h.DictsToTable

@name("Costs vs Benefits")
costBenefitPlot = Plot.dists(
  [
    { name: "Time Value", value: calculations.annualTimeValue },
    { name: "Manufacturing Cost", value: calculations.annualManufacturingCost },
    { name: "Aesthetic Cost", value: -calculations.annualAestheticCost },
  ],
  { xScale: Scale.symlog({ min: -1T, max: 1T }) }
)
