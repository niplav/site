import csv
import time
import statistics
import numpy as np

def brierscore(o,p):
	return np.mean(np.abs(o-p)**2)

def logscore(o,p):
	return o*np.log(p)+(1-o)*np.log(1-p)

def logit(p):
	return np.log(p/(1-p))

def logistic(p):
	return 1/(1+np.exp(-p))

def noised_score(forecasts, perturbation=1, samples=100):
	o=forecasts[0]
	p=forecasts[1]
	pert_scores=[]
	for i in range(0,samples):
		noised=logistic(logit(p)+np.random.default_rng(seed=time.monotonic_ns()).uniform(-perturbation/2,perturbation/2,len(p)))
		pert_scores.append(logscore(o,noised))
	return np.mean(pert_scores)

def logodds_rounded_score(forecasts, perturbation=1):
	p=forecasts[1]
	lo=logit(p)
	rounded_lo=perturbation*np.round(lo/perturbation)
	rounded_probs=logistic(rounded_lo)
	return np.mean(logscore(forecasts[0], rounded_probs))

def lo_precision_scores(forecasts, samples=100, low=10e-4, high=10, change=2, mode='round', stepmode='exp'):
	p=low
	deg_scores=[]
	while p<high:
		if mode=='round':
			deg_scores=deg_scores+[[p, logodds_rounded_score(forecasts, perturbation=p)]]
		elif mode=='noise':
			deg_scores=deg_scores+[[p, noised_score(forecasts, perturbation=p, samples=samples)]]
		if stepmode=='exp':
			p=p*change
		elif stepmode=='lin':
			p=p+change
	return np.array(deg_scores).T

def prob_rounded_score(forecasts, perturbation=0.1):
	p=forecasts[1]
	rounded_probs=perturbation*np.round(p/perturbation)
	rounded_probs[np.where(rounded_probs>=1)]=1-perturbation
	rounded_probs[np.where(rounded_probs<=0)]=perturbation
	return np.mean(logscore(forecasts[0], rounded_probs))

def prob_precision_scores(forecasts, samples=100, low=10e-4, high=0.5, change=0.01, stepmode='lin'):
	p=low
	deg_scores=[]
	while p<high:
		deg_scores=deg_scores+[[p, prob_rounded_score(forecasts, perturbation=p)]]
		if stepmode=='exp':
			p=p*change
		elif stepmode=='lin':
			p=p+change
	return np.array(deg_scores).T

def linsearch_precision(forecasts, samples=100, low=10e-4, high=10, change=2, mindiff=0.01, mode='round', stepmode='exp'):
	clean_score=pert_score=np.mean(logscore(forecasts[0], forecasts[1]))
	p=low
	while np.abs(clean_score-pert_score)<mindiff and p<high:
		if mode=='round':
			pert_score=logodds_rounded_score(forecasts, perturbation=p)
		elif mode=='noise':
			pert_score=noised_score(forecasts, perturbation=p, samples=samples)
		if stepmode=='exp':
			p=p*change
		elif stepmode=='lin':
			p=p+change
	return p

def binsearch_precision(forecasts, samples=100, low=10e-4, high=10, mindiff=0.01, mode='round', minstep=10e-4):
	clean_score=np.mean(logscore(forecasts[0], forecasts[1]))
	while high-low>minstep:
		mid=(high+low)/2
		if mode=='round':
			pert_score=logodds_rounded_score(forecasts, perturbation=mid)
		elif mode=='noise':
			pert_score=noised_score(forecasts, perturbation=mid, samples=samples)
		if np.abs(clean_score-pert_score)<mindiff:
			low=mid
		else:
			high=mid
	return mid

d1=np.array([[1,0.8],[0,0.4],[0,0.65],[1,0.99]]).T
oc=d1[0]
pr=d1[1]

d2=np.array([[1,0.8],[0,0.4],[0,0.65],[1,0.9]]).T
oc2=d1[0]
pr2=d1[1]

d3=np.array([[0,0.8],[1,0.4],[1,0.65],[0,0.9]]).T
oc3=d1[0]
pr3=d1[1]

def syndata(buckets=10, bucket_samples=10):
	probs=np.repeat(np.arange(0.001, 1, 1/buckets)[:,None], bucket_samples)
	outcomes=np.int32(np.random.default_rng(seed=time.monotonic_ns()).uniform(size=buckets*bucket_samples)<probs)
	return np.vstack((outcomes, probs))

d4=syndata(buckets=10, bucket_samples=10)
d5=syndata(buckets=2, bucket_samples=50)
d6=syndata(buckets=20, bucket_samples=100)

lo_round_scores_1=lo_precision_scores(d1, change=1.1, high=10)
lo_round_scores_2=lo_precision_scores(d2, change=1.1, high=10)
lo_round_scores_3=lo_precision_scores(d3, change=1.1, high=10)
lo_round_scores_4=lo_precision_scores(d4, change=1.1, high=10)
lo_round_scores_5=lo_precision_scores(d5, change=1.1, high=10)
lo_round_scores_6=lo_precision_scores(d6, change=1.1, high=10)

lo_pert_scores_1=lo_precision_scores(d1, change=1.2, mode='noise', samples=500, high=10)
lo_pert_scores_2=lo_precision_scores(d2, change=1.2, mode='noise', samples=500, high=10)
lo_pert_scores_3=lo_precision_scores(d3, change=1.2, mode='noise', samples=500, high=10)
lo_pert_scores_4=lo_precision_scores(d4, change=1.2, mode='noise', samples=500, high=10)
lo_pert_scores_5=lo_precision_scores(d5, change=1.2, mode='noise', samples=500, high=10)
lo_pert_scores_6=lo_precision_scores(d6, change=1.2, mode='noise', samples=500, high=10)

p_round_scores_1=prob_precision_scores(d1)
p_round_scores_2=prob_precision_scores(d2)
p_round_scores_3=prob_precision_scores(d3)
p_round_scores_4=prob_precision_scores(d4)
p_round_scores_5=prob_precision_scores(d5)
p_round_scores_6=prob_precision_scores(d6)

metaculus_scores=np.array([[ 1.00000000e-03,  1.10000000e-03,  1.21000000e-03,
         1.33100000e-03,  1.46410000e-03,  1.61051000e-03,
         1.77156100e-03,  1.94871710e-03,  2.14358881e-03,
         2.35794769e-03,  2.59374246e-03,  2.85311671e-03,
         3.13842838e-03,  3.45227121e-03,  3.79749834e-03,
         4.17724817e-03,  4.59497299e-03,  5.05447028e-03,
         5.55991731e-03,  6.11590904e-03,  6.72749995e-03,
         7.40024994e-03,  8.14027494e-03,  8.95430243e-03,
         9.84973268e-03,  1.08347059e-02,  1.19181765e-02,
         1.31099942e-02,  1.44209936e-02,  1.58630930e-02,
         1.74494023e-02,  1.91943425e-02,  2.11137767e-02,
         2.32251544e-02,  2.55476699e-02,  2.81024368e-02,
         3.09126805e-02,  3.40039486e-02,  3.74043434e-02,
         4.11447778e-02,  4.52592556e-02,  4.97851811e-02,
         5.47636992e-02,  6.02400692e-02,  6.62640761e-02,
         7.28904837e-02,  8.01795321e-02,  8.81974853e-02,
         9.70172338e-02,  1.06718957e-01,  1.17390853e-01,
         1.29129938e-01,  1.42042932e-01,  1.56247225e-01,
         1.71871948e-01,  1.89059142e-01,  2.07965057e-01,
         2.28761562e-01,  2.51637719e-01,  2.76801490e-01,
         3.04481640e-01,  3.34929803e-01,  3.68422784e-01,
         4.05265062e-01,  4.45791568e-01,  4.90370725e-01,
         5.39407798e-01,  5.93348578e-01,  6.52683435e-01,
         7.17951779e-01,  7.89746957e-01,  8.68721652e-01,
         9.55593818e-01,  1.05115320e+00,  1.15626852e+00,
         1.27189537e+00,  1.39908491e+00,  1.53899340e+00,
         1.69289274e+00,  1.86218201e+00,  2.04840021e+00,
         2.25324024e+00,  2.47856426e+00,  2.72642069e+00,
         2.99906275e+00,  3.29896903e+00,  3.62886593e+00,
         3.99175253e+00,  4.39092778e+00,  4.83002056e+00,
         5.31302261e+00,  5.84432487e+00,  6.42875736e+00,
         7.07163310e+00,  7.77879641e+00,  8.55667605e+00,
         9.41234365e+00],
       [-6.48975848e-01, -6.48976146e-01, -6.48976052e-01,
        -6.48976184e-01, -6.48976069e-01, -6.48976166e-01,
        -6.48975945e-01, -6.48976206e-01, -6.48976171e-01,
        -6.48976301e-01, -6.48976371e-01, -6.48976556e-01,
        -6.48976176e-01, -6.48976184e-01, -6.48976270e-01,
        -6.48976669e-01, -6.48975403e-01, -6.48976038e-01,
        -6.48975679e-01, -6.48975833e-01, -6.48976015e-01,
        -6.48978279e-01, -6.48976154e-01, -6.48976407e-01,
        -6.48975767e-01, -6.48975298e-01, -6.48976938e-01,
        -6.48978346e-01, -6.48977632e-01, -6.48976682e-01,
        -6.48980888e-01, -6.48977111e-01, -6.48976061e-01,
        -6.48975827e-01, -6.48980308e-01, -6.48979523e-01,
        -6.48980136e-01, -6.48989692e-01, -6.48986822e-01,
        -6.48987668e-01, -6.48987384e-01, -6.48985499e-01,
        -6.48991288e-01, -6.49001775e-01, -6.48999297e-01,
        -6.49014844e-01, -6.49020710e-01, -6.49021417e-01,
        -6.49042531e-01, -6.49069642e-01, -6.49075820e-01,
        -6.49102697e-01, -6.49134080e-01, -6.49169676e-01,
        -6.49188652e-01, -6.49229740e-01, -6.49280017e-01,
        -6.49348700e-01, -6.49439906e-01, -6.49483435e-01,
        -6.49658303e-01, -6.49789880e-01, -6.49906480e-01,
        -6.50177279e-01, -6.50350456e-01, -6.50723783e-01,
        -6.51005852e-01, -6.51343892e-01, -6.51849993e-01,
        -6.52575530e-01, -6.53341237e-01, -6.54244220e-01,
        -6.55364514e-01, -6.56795011e-01, -6.58215443e-01,
        -6.60258851e-01, -6.62519754e-01, -6.65441399e-01,
        -6.68984088e-01, -6.73082963e-01, -6.77946915e-01,
        -6.83800773e-01, -6.91236461e-01, -7.00085353e-01,
        -7.10599828e-01, -7.23175789e-01, -7.38697948e-01,
        -7.56144730e-01, -7.77732761e-01, -8.03188401e-01,
        -8.32410644e-01, -8.69231194e-01, -9.12381959e-01,
        -9.60974852e-01, -1.01887931e+00, -1.08464920e+00,
        -1.16413569e+00]])

gjpsurvey_scores=np.array([[ 1.00000000e-03,  1.10000000e-03,  1.21000000e-03,
         1.33100000e-03,  1.46410000e-03,  1.61051000e-03,
         1.77156100e-03,  1.94871710e-03,  2.14358881e-03,
         2.35794769e-03,  2.59374246e-03,  2.85311671e-03,
         3.13842838e-03,  3.45227121e-03,  3.79749834e-03,
         4.17724817e-03,  4.59497299e-03,  5.05447028e-03,
         5.55991731e-03,  6.11590904e-03,  6.72749995e-03,
         7.40024994e-03,  8.14027494e-03,  8.95430243e-03,
         9.84973268e-03,  1.08347059e-02,  1.19181765e-02,
         1.31099942e-02,  1.44209936e-02,  1.58630930e-02,
         1.74494023e-02,  1.91943425e-02,  2.11137767e-02,
         2.32251544e-02,  2.55476699e-02,  2.81024368e-02,
         3.09126805e-02,  3.40039486e-02,  3.74043434e-02,
         4.11447778e-02,  4.52592556e-02,  4.97851811e-02,
         5.47636992e-02,  6.02400692e-02,  6.62640761e-02,
         7.28904837e-02,  8.01795321e-02,  8.81974853e-02,
         9.70172338e-02,  1.06718957e-01,  1.17390853e-01,
         1.29129938e-01,  1.42042932e-01,  1.56247225e-01,
         1.71871948e-01,  1.89059142e-01,  2.07965057e-01,
         2.28761562e-01,  2.51637719e-01,  2.76801490e-01,
         3.04481640e-01,  3.34929803e-01,  3.68422784e-01,
         4.05265062e-01,  4.45791568e-01,  4.90370725e-01,
         5.39407798e-01,  5.93348578e-01,  6.52683435e-01,
         7.17951779e-01,  7.89746957e-01,  8.68721652e-01,
         9.55593818e-01,  1.05115320e+00,  1.15626852e+00,
         1.27189537e+00,  1.39908491e+00,  1.53899340e+00,
         1.69289274e+00,  1.86218201e+00,  2.04840021e+00,
         2.25324024e+00,  2.47856426e+00,  2.72642069e+00,
         2.99906275e+00,  3.29896903e+00,  3.62886593e+00,
         3.99175253e+00,  4.39092778e+00,  4.83002056e+00,
         5.31302261e+00,  5.84432487e+00,  6.42875736e+00,
         7.07163310e+00,  7.77879641e+00,  8.55667605e+00,
         9.41234365e+00],
       [-4.69084040e-01, -4.69084057e-01, -4.69084085e-01,
        -4.69084076e-01, -4.69084018e-01, -4.69084149e-01,
        -4.69084134e-01, -4.69084018e-01, -4.69084069e-01,
        -4.69084037e-01, -4.69084112e-01, -4.69083845e-01,
        -4.69084125e-01, -4.69084082e-01, -4.69084147e-01,
        -4.69084264e-01, -4.69084081e-01, -4.69084381e-01,
        -4.69084335e-01, -4.69084159e-01, -4.69084030e-01,
        -4.69084365e-01, -4.69084172e-01, -4.69084523e-01,
        -4.69084853e-01, -4.69084354e-01, -4.69084715e-01,
        -4.69084420e-01, -4.69085314e-01, -4.69085452e-01,
        -4.69085349e-01, -4.69085253e-01, -4.69086188e-01,
        -4.69086427e-01, -4.69086999e-01, -4.69088423e-01,
        -4.69087920e-01, -4.69088065e-01, -4.69089469e-01,
        -4.69091702e-01, -4.69091417e-01, -4.69094757e-01,
        -4.69097031e-01, -4.69100338e-01, -4.69103019e-01,
        -4.69109548e-01, -4.69112555e-01, -4.69120198e-01,
        -4.69126049e-01, -4.69134585e-01, -4.69145734e-01,
        -4.69158379e-01, -4.69175587e-01, -4.69188485e-01,
        -4.69217255e-01, -4.69247889e-01, -4.69280921e-01,
        -4.69321726e-01, -4.69367980e-01, -4.69424504e-01,
        -4.69495344e-01, -4.69574496e-01, -4.69681691e-01,
        -4.69831036e-01, -4.69959046e-01, -4.70140260e-01,
        -4.70383809e-01, -4.70637011e-01, -4.70967245e-01,
        -4.71362334e-01, -4.71837751e-01, -4.72450651e-01,
        -4.73131629e-01, -4.73985508e-01, -4.75022718e-01,
        -4.76280861e-01, -4.77747200e-01, -4.79625885e-01,
        -4.81768621e-01, -4.84464887e-01, -4.87690600e-01,
        -4.91521009e-01, -4.96202266e-01, -5.01829306e-01,
        -5.08458785e-01, -5.16845560e-01, -5.26690919e-01,
        -5.38593435e-01, -5.52737595e-01, -5.69895033e-01,
        -5.90133787e-01, -6.14921098e-01, -6.43905412e-01,
        -6.78419130e-01, -7.19784976e-01, -7.69061885e-01,
        -8.26555115e-01]])

gjpmarket_scores=np.array([[ 1.00000000e-03,  1.10000000e-03,  1.21000000e-03,
         1.33100000e-03,  1.46410000e-03,  1.61051000e-03,
         1.77156100e-03,  1.94871710e-03,  2.14358881e-03,
         2.35794769e-03,  2.59374246e-03,  2.85311671e-03,
         3.13842838e-03,  3.45227121e-03,  3.79749834e-03,
         4.17724817e-03,  4.59497299e-03,  5.05447028e-03,
         5.55991731e-03,  6.11590904e-03,  6.72749995e-03,
         7.40024994e-03,  8.14027494e-03,  8.95430243e-03,
         9.84973268e-03,  1.08347059e-02,  1.19181765e-02,
         1.31099942e-02,  1.44209936e-02,  1.58630930e-02,
         1.74494023e-02,  1.91943425e-02,  2.11137767e-02,
         2.32251544e-02,  2.55476699e-02,  2.81024368e-02,
         3.09126805e-02,  3.40039486e-02,  3.74043434e-02,
         4.11447778e-02,  4.52592556e-02,  4.97851811e-02,
         5.47636992e-02,  6.02400692e-02,  6.62640761e-02,
         7.28904837e-02,  8.01795321e-02,  8.81974853e-02,
         9.70172338e-02,  1.06718957e-01,  1.17390853e-01,
         1.29129938e-01,  1.42042932e-01,  1.56247225e-01,
         1.71871948e-01,  1.89059142e-01,  2.07965057e-01,
         2.28761562e-01,  2.51637719e-01,  2.76801490e-01,
         3.04481640e-01,  3.34929803e-01,  3.68422784e-01,
         4.05265062e-01,  4.45791568e-01,  4.90370725e-01,
         5.39407798e-01,  5.93348578e-01,  6.52683435e-01,
         7.17951779e-01,  7.89746957e-01,  8.68721652e-01,
         9.55593818e-01,  1.05115320e+00,  1.15626852e+00,
         1.27189537e+00,  1.39908491e+00,  1.53899340e+00,
         1.69289274e+00,  1.86218201e+00,  2.04840021e+00,
         2.25324024e+00,  2.47856426e+00,  2.72642069e+00,
         2.99906275e+00,  3.29896903e+00,  3.62886593e+00,
         3.99175253e+00,  4.39092778e+00,  4.83002056e+00,
         5.31302261e+00,  5.84432487e+00,  6.42875736e+00,
         7.07163310e+00,  7.77879641e+00,  8.55667605e+00,
         9.41234365e+00],
       [-5.03610208e-01, -5.03610323e-01, -5.03610248e-01,
        -5.03610180e-01, -5.03610220e-01, -5.03610289e-01,
        -5.03610266e-01, -5.03610222e-01, -5.03610493e-01,
        -5.03610200e-01, -5.03610367e-01, -5.03610185e-01,
        -5.03610355e-01, -5.03610328e-01, -5.03610330e-01,
        -5.03609905e-01, -5.03610802e-01, -5.03610302e-01,
        -5.03610274e-01, -5.03610788e-01, -5.03610508e-01,
        -5.03610179e-01, -5.03610563e-01, -5.03611410e-01,
        -5.03610536e-01, -5.03611099e-01, -5.03611593e-01,
        -5.03610822e-01, -5.03612311e-01, -5.03611319e-01,
        -5.03612104e-01, -5.03613167e-01, -5.03612810e-01,
        -5.03615294e-01, -5.03614127e-01, -5.03613464e-01,
        -5.03615895e-01, -5.03616104e-01, -5.03621102e-01,
        -5.03623073e-01, -5.03621893e-01, -5.03622915e-01,
        -5.03626331e-01, -5.03632938e-01, -5.03641781e-01,
        -5.03642118e-01, -5.03653034e-01, -5.03652606e-01,
        -5.03673264e-01, -5.03682898e-01, -5.03689058e-01,
        -5.03711537e-01, -5.03729741e-01, -5.03758807e-01,
        -5.03798924e-01, -5.03818622e-01, -5.03879453e-01,
        -5.03930485e-01, -5.04004113e-01, -5.04084465e-01,
        -5.04179539e-01, -5.04295467e-01, -5.04473662e-01,
        -5.04595918e-01, -5.04843220e-01, -5.05061123e-01,
        -5.05421200e-01, -5.05759071e-01, -5.06218577e-01,
        -5.06756480e-01, -5.07450235e-01, -5.08202160e-01,
        -5.09183278e-01, -5.10406288e-01, -5.11753814e-01,
        -5.13464070e-01, -5.15519219e-01, -5.17955038e-01,
        -5.20901419e-01, -5.24754118e-01, -5.29060649e-01,
        -5.34404155e-01, -5.40801464e-01, -5.48563971e-01,
        -5.57815304e-01, -5.68978391e-01, -5.82237223e-01,
        -5.98345130e-01, -6.17451278e-01, -6.40680612e-01,
        -6.68140756e-01, -7.00191154e-01, -7.38798456e-01,
        -7.84828214e-01, -8.38061450e-01, -9.00830806e-01,
        -9.74068959e-01]])

predictionbook_scores=np.array([[ 1.00000000e-03,  1.10000000e-03,  1.21000000e-03,
         1.33100000e-03,  1.46410000e-03,  1.61051000e-03,
         1.77156100e-03,  1.94871710e-03,  2.14358881e-03,
         2.35794769e-03,  2.59374246e-03,  2.85311671e-03,
         3.13842838e-03,  3.45227121e-03,  3.79749834e-03,
         4.17724817e-03,  4.59497299e-03,  5.05447028e-03,
         5.55991731e-03,  6.11590904e-03,  6.72749995e-03,
         7.40024994e-03,  8.14027494e-03,  8.95430243e-03,
         9.84973268e-03,  1.08347059e-02,  1.19181765e-02,
         1.31099942e-02,  1.44209936e-02,  1.58630930e-02,
         1.74494023e-02,  1.91943425e-02,  2.11137767e-02,
         2.32251544e-02,  2.55476699e-02,  2.81024368e-02,
         3.09126805e-02,  3.40039486e-02,  3.74043434e-02,
         4.11447778e-02,  4.52592556e-02,  4.97851811e-02,
         5.47636992e-02,  6.02400692e-02,  6.62640761e-02,
         7.28904837e-02,  8.01795321e-02,  8.81974853e-02,
         9.70172338e-02,  1.06718957e-01,  1.17390853e-01,
         1.29129938e-01,  1.42042932e-01,  1.56247225e-01,
         1.71871948e-01,  1.89059142e-01,  2.07965057e-01,
         2.28761562e-01,  2.51637719e-01,  2.76801490e-01,
         3.04481640e-01,  3.34929803e-01,  3.68422784e-01,
         4.05265062e-01,  4.45791568e-01,  4.90370725e-01,
         5.39407798e-01,  5.93348578e-01,  6.52683435e-01,
         7.17951779e-01,  7.89746957e-01,  8.68721652e-01,
         9.55593818e-01,  1.05115320e+00,  1.15626852e+00,
         1.27189537e+00,  1.39908491e+00,  1.53899340e+00,
         1.69289274e+00,  1.86218201e+00,  2.04840021e+00,
         2.25324024e+00,  2.47856426e+00,  2.72642069e+00,
         2.99906275e+00,  3.29896903e+00,  3.62886593e+00,
         3.99175253e+00,  4.39092778e+00,  4.83002056e+00,
         5.31302261e+00,  5.84432487e+00,  6.42875736e+00,
         7.07163310e+00,  7.77879641e+00,  8.55667605e+00,
         9.41234365e+00],
       [-5.09157681e-01, -5.09157576e-01, -5.09157593e-01,
        -5.09157587e-01, -5.09157505e-01, -5.09157535e-01,
        -5.09158224e-01, -5.09157742e-01, -5.09157462e-01,
        -5.09157880e-01, -5.09157703e-01, -5.09157912e-01,
        -5.09158236e-01, -5.09157772e-01, -5.09157795e-01,
        -5.09157476e-01, -5.09157679e-01, -5.09159069e-01,
        -5.09156551e-01, -5.09158356e-01, -5.09158245e-01,
        -5.09156401e-01, -5.09158077e-01, -5.09158947e-01,
        -5.09161950e-01, -5.09157915e-01, -5.09154201e-01,
        -5.09158883e-01, -5.09158298e-01, -5.09163037e-01,
        -5.09161897e-01, -5.09165047e-01, -5.09159679e-01,
        -5.09162372e-01, -5.09154420e-01, -5.09162776e-01,
        -5.09166123e-01, -5.09160586e-01, -5.09174273e-01,
        -5.09173687e-01, -5.09157534e-01, -5.09170924e-01,
        -5.09166753e-01, -5.09175821e-01, -5.09192703e-01,
        -5.09179464e-01, -5.09210383e-01, -5.09192961e-01,
        -5.09205799e-01, -5.09207959e-01, -5.09244952e-01,
        -5.09234416e-01, -5.09291063e-01, -5.09300875e-01,
        -5.09350944e-01, -5.09393745e-01, -5.09393341e-01,
        -5.09558999e-01, -5.09516611e-01, -5.09615412e-01,
        -5.09687840e-01, -5.09796260e-01, -5.09897322e-01,
        -5.10097480e-01, -5.10281269e-01, -5.10600939e-01,
        -5.10772797e-01, -5.11205174e-01, -5.11791837e-01,
        -5.12143170e-01, -5.12830136e-01, -5.13366621e-01,
        -5.14122475e-01, -5.15457392e-01, -5.17112590e-01,
        -5.18654203e-01, -5.20279768e-01, -5.23060320e-01,
        -5.25752849e-01, -5.28546394e-01, -5.33006752e-01,
        -5.37970764e-01, -5.44157853e-01, -5.50413677e-01,
        -5.59556435e-01, -5.70392492e-01, -5.82732777e-01,
        -5.97618553e-01, -6.15650697e-01, -6.37476350e-01,
        -6.62591939e-01, -6.93492824e-01, -7.29496664e-01,
        -7.70904814e-01, -8.20241586e-01, -8.80593453e-01,
        -9.49850778e-01]])
